#include<iostream>
using namespace std;
struct Node
{
int data;
  struct Node *next;
};
void Create(){cout<<"";}
void push(struct Node** head_ref, int new_data)
{
    struct Node* new_node =(struct Node*) malloc(sizeof(struct Node));
    new_node->data  = new_data;
    new_node->next = (*head_ref);
    (*head_ref)    = new_node;
}
Node* getNode(int data) 
{ 
    Node* newNode = new Node(); 
    newNode->data = data; 
    newNode->next = NULL; 
    return newNode; 
} 
void printList(struct Node *node)
{
    while (node!=NULL)
    {
        cout<<"->"<<node->data;
        node = node->next;
    }
}
int size;
void get(Node** current, int pos, int data) 
{ 
    if (pos < 1 || pos > size + 1) 
        cout << "Invalid position!" << endl; 
    else { 
        while (pos--) { 
  
            if (pos == 0) { 
                Node* temp = getNode(data); 
                temp->next = *current; 
                *current = temp; 
            } 
            else
              current = &(*current)->next; 
        } 
        size++; 
    } 
} 


int main(){
  cin>>size;
  int a[size];
  struct Node *head=NULL;
  for(int i=0;i<size;i++)
    cin>>a[i];
    for(int i=size-1;i>=0;i--)
      push(&head,a[i]);
  
  int pos,data;
  cin>>pos>>data;
  get(&head, pos, data); 
  cout<<"Linked List : ";
  printList(head);
}
